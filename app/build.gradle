apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.firebase.crashlytics'
/*apply plugin: 'io.fabric'*/
apply plugin: 'kotlin-kapt'
android {
    compileSdk 34
    signingConfigs {

        release_config {
            storeFile file('app\\keystore\\onewaytripcalltaxidriver.jks')
            storePassword 'onewaytripcalltaxidriver'
            keyAlias 'onewaytripcalltaxidriver'
            keyPassword 'onewaytripcalltaxidriver'

        }
    }
    defaultConfig {
        applicationId "com.bluetaxidriver"
        minSdkVersion 21
        targetSdkVersion 34
        multiDexEnabled true
        signingConfig signingConfigs.release_config
        ndk.abiFilters 'armeabi-v7a','arm64-v8a','x86','x86_64'

        vectorDrawables.useSupportLibrary = true
//        ndk {
//            // Tells Gradle to build outputs for the following ABIs and package
//            // them into your APK.
//            abiFilters 'x86', 'x86_64', 'armeabi-v7a','arm64-v8a'
//        }
    }
    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "googleID", "$rootProject.ext.googleID"
            resValue "string", "app_name", "$rootProject.ext.app_name"
            resValue "string", "common_name", "$rootProject.ext.common_name"
        }
        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
            /*minifyEnabled true
            shrinkResources true
            debuggable true
            useProguard true*/
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
//                    'proguard-rules.pro'
            resValue "string", "googleID", "$rootProject.ext.googleID"
            resValue "string", "app_name", "$rootProject.ext.app_name"
            resValue "string", "common_name", "$rootProject.ext.common_name"
        }
    }
    lintOptions {
        checkReleaseBuilds false
        disable 'InvalidPackage'
        // set to true to turn off analysis progress reporting by lint
        quiet true
        // if true, stop the gradle build if errors are found
        abortOnError false
        // if true, only report errors
        ignoreWarnings true
    }
    dataBinding {
        enabled = true
    }

    configurations.all {
        exclude group: 'com.android.support', module: 'support-v13'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize = "4g"
    }
   /* splits {
        *//*density {
            enable true
            reset()
            include "ldpi", "mdpi", "hdpi","xhdpi" , "xxhdpi","xxhdpi"
        }*//*
        abi {
            enable true
            reset()
//            include "armeabi-v7a", "x86", "x86_64"
            include "x86", "armeabi-v7a", "arm64-v8a", "x86_64"
            universalApk true
        }
    }*/
}
//ext.abiCodes = ['armeabi-v7a': 1, x86: 2, x86_64: 3]
//ext.abiCodes = ['universal': 0,'armeabi-v7a': 1,'arm64-v8a':2, 'x86': 3, 'x86_64': 4]
//import com.android.build.OutputFile
//
//
//android.applicationVariants.all { variant ->
//
//    // Assigns a different version code for each output APK
//    // other than the universal APK.
//    variant.outputs.all { output ->
//
//        // Stores the value of ext.abiCodes that is associated with the ABI for this variant.
//        def baseAbiVersionCode =
//                // Determines the ABI for this variant and returns the mapped value.
//                project.ext.abiCodes.get(output.getFilter(OutputFile.ABI))
//
//        // Because abiCodes.get() returns null for ABIs that are not mapped by ext.abiCodes,
//        // the following code does not override the version code for universal APKs.
//        // However, because we want universal APKs to have the lowest version code,
//        // this outcome is desirable.
//        if (baseAbiVersionCode != null) {
//
//            // Assigns the new version code to versionCodeOverride, which changes the version code
//            // for only the output APK, not for the variant itself. Skipping this step simply
//            // causes Gradle to use the value of variant.versionCode for the APK.
//            output.versionCodeOverride =
//                    baseAbiVersionCode * 1000 + variant.versionCode
//
//            outputFileName = "${"Driverupload"}-${"" + baseAbiVersionCode}.apk"
//        }
//    }
//
//}
dependencies {
//    implementation files('libs/jsoup-1.7.1.jar')
    implementation project(path: ':library')
   // implementation project(path: ':scanlibrary')
    implementation project(path:':sospluginmodlue')


    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.3.0'



    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.browser:browser:1.2.0'
    implementation "com.google.android.gms:play-services-maps:$rootProject.ext.maps"
    implementation ("com.google.android.gms:play-services-location:$rootProject.ext.location")
            {
                exclude group: 'com.google.android.gms', module: 'play-services-ads'
            }

    implementation "com.google.android.libraries.places:places:$rootProject.ext.places"
    implementation "com.google.firebase:firebase-messaging:$rootProject.ext.firebase_messaging"
//    implementation "com.google.firebase:firebase-core:$rootProject.ext.firebase_core"
    implementation "com.google.maps.android:android-maps-utils:$rootProject.ext.maps_utils"
    implementation "com.google.code.gson:gson:$rootProject.ext.googleGson"
    implementation "com.github.bumptech.glide:glide:$rootProject.ext.glide"
//    implementation "com.wdullaer:materialdatetimepicker:$rootProject.ext.materialdatetimepicker"
    implementation "com.github.yalantis:ucrop:$rootProject.ext.ucrop"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.converter_gson"
    implementation "com.squareup.picasso:picasso:$rootProject.ext.picasso"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.interceptor"
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    //  implementation "com.github.PhilJay:MPAndroidChart:$rootProject.ext.MPAndroid"
//    implementation "jp.wasabeef:recyclerview-animators:$rootProject.ext.animator"
//    implementation "com.ethanhua:skeleton:$rootProject.ext.skeleton"
//    implementation "io.supercharge:shimmerlayout:$rootProject.ext.shimmerlayout"
    implementation "uk.co.samuelwall:material-tap-target-prompt:$rootProject.ext.target_prompt"

//    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // Room components
    implementation 'androidx.room:room-runtime:2.2.5'
    implementation 'androidx.cardview:cardview:1.0.0'

    annotationProcessor 'androidx.room:room-compiler:2.2.5'
    androidTestImplementation 'androidx.room:room-testing:2.2.5'
    // Lifecycle components
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.2.0'
    //kapt "android.arch.persistence.room:compiler:2.3.0"
    kapt "androidx.room:room-compiler:2.2.5"


    // Add the Firebase Crashlytics SDK.
    implementation 'com.google.firebase:firebase-crashlytics:17.2.1'
    implementation "com.google.android.gms:play-services-auth:$rootProject.play_service_auth"
    implementation 'com.github.angads25:toggle:1.1.0'
    implementation 'com.github.beigirad:ZigzagView:1.2.0'
    implementation 'com.razorpay:checkout:1.6.33'

    implementation 'com.android.volley:volley:1.2.1'


    //  implementation project(path: ':sospluginmodlue')
//    implementation "com.crashlytics.sdk.android:crashlytics:$rootProject.ext.crashlytics"
    /*implementation "com.facebook.stetho:stetho-okhttp3:$rootProject.stetho"*/
//    implementation "com.facebook.fresco:fresco:$rootProject.fresco"
//    implementation "androidx.versionedparcelable:versionedparcelable:1.1.0"
}
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
